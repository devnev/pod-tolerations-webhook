name: ci

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v0.[0-9]+.[0-9]+

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: katexochen/go-tidy-check@v2
        if: ${{ !cancelled() }}
      - uses: reviewdog/action-shfmt@v1
        if: ${{ !cancelled() }}
        with:
          reviewdog_flags: "-reporter=github-check"
      - uses: reviewdog/action-shellcheck@v1
        if: ${{ !cancelled() }}
        with:
          reporter: github-check
          check_all_files_with_shebangs: "true"
      - uses: yokawasa/action-setup-kube-tools@v0.11.2
        id: install-kube-tools
        if: ${{ !cancelled() }}
        with:
          setup-tools: |
            kubectl
            kustomize
            kubeconform
          kubectl: "1.31.3"
          kustomize: "5.5.0"
          kubeconform: "0.6.7"
      - if: ${{ !cancelled() && steps.install-kube-tools.conclusion == 'success' }}
        run: |
          set -euo pipefail
          for dir in ./kustomize/*; do
            kustomize build "$dir" | kubeconform -verbose \
              -schema-location 'https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/{{.NormalizedKubernetesVersion}}-standalone{{.StrictSuffix}}/{{.ResourceKind}}{{.KindSuffix}}.json' \
              -schema-location 'https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json'
          done
      - name: Install KinD
        id: install-kind
        uses: helm/kind-action@v1
        if: ${{ !cancelled() && steps.install-kube-tools.conclusion == 'success' }}
        with:
          install_only: "true"
      - name: Run E2E
        if: ${{ !cancelled() && steps.install-kind.conclusion == 'success' }}
        run: |
          ./test/e2e.sh

  build-and-push:
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - name: Set up Docker Buildx
        id: setup
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: devnev
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: devnev/pod-tolerations-webhook
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long
            type=semver,pattern={{version}}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          sbom: true
          push: true
          provenance: mode=max
          platforms: ${{ steps.setup.outputs.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
